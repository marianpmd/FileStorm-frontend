
name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # using Ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1 #this installs node and npm for us
        with:
          node-version: '16.x'

      - uses: actions/cache@v1 # this allows for re-using node_modules caching, making builds a bit faster.
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: NPM Install
        run: npm install --force
      - name: NPM Install Angular
        run: npm install -g @angular/cli > /dev/null
      - name: NPM build Angular Production
        run: ng build
      - name: Delete Existing Files
        run : sudo sshpass -p ${{ secrets.PASSWORD }} -v ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'sudo rm -rf /var/www/depl-test/*'

      - name: Compress and Copy New Files to server
        run : |
          cd dist/file-storm-frontend/
          sudo tar -czvf ../../file-storm-frontend.tar.gz ./
          cd ..
          cd ..
          sudo sshpass -p ${{ secrets.PASSWORD }} sudo scp -v -o StrictHostKeyChecking=no -r file-storm-frontend.tar.gz ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/var/www/depl-test
      - name: Uncompress new Files
        run : sudo sshpass -p ${{ secrets.PASSWORD }} -v sudo ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /var/www/depl-test && sudo tar -xzvf file-storm-frontend.tar.gz && sudo rm file-storm-frontend.tar.gz'
      - name: Restart service
        run : sudo systemctl restart nginx
